{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasse\\\\OneDrive\\\\Desktop\\\\wordle\\\\wordle-react\\\\src\\\\components\\\\modal.tsx\";\nimport styles from \"./modal.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modal(_ref) {\n  let {\n    type,\n    completedWords,\n    solution\n  } = _ref;\n\n  function Square(_ref2) {\n    let {\n      word,\n      solution\n    } = _ref2;\n\n    function checkLetter(letter, pos) {\n      if (solution.includes(letter)) {\n        if (solution[pos] === letter) {\n          return \"ðŸŸ©\";\n        } else {\n          return \"ðŸŸ¨\";\n        }\n      } else {\n        return \"â¬›\";\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.puzzleWord,\n      children: word.split(\"\").map((letter, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: checkLetter(letter, i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modalViewContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"You \", type === \"won\" ? \"won!\" : \"lost\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.puzzle,\n        children: completedWords.map((word, i) => /*#__PURE__*/_jsxDEV(Square, {\n          word: word,\n          solution: solution\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/Users/nasse/OneDrive/Desktop/wordle/wordle-react/src/components/modal.tsx"],"names":["styles","Modal","type","completedWords","solution","Square","word","checkLetter","letter","pos","includes","puzzleWord","split","map","i","modalViewContainer","modalContainer","puzzle"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,qBAAnB;;AAaA,eAAe,SAASC,KAAT,OAA+D;AAAA,MAAhD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,cAAR;AAAwBC,IAAAA;AAAxB,GAAgD;;AAC5E,WAASC,MAAT,QAAiD;AAAA,QAAjC;AAAEC,MAAAA,IAAF;AAAQF,MAAAA;AAAR,KAAiC;;AAC/C,aAASG,WAAT,CAAqBC,MAArB,EAAqCC,GAArC,EAA0D;AACxD,UAAIL,QAAQ,CAACM,QAAT,CAAkBF,MAAlB,CAAJ,EAA+B;AAC7B,YAAIJ,QAAQ,CAACK,GAAD,CAAR,KAAkBD,MAAtB,EAA8B;AAC5B,iBAAO,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,IAAP;AACD;AACF,OAND,MAMO;AACL,eAAO,GAAP;AACD;AACF;;AACD,wBACE;AAAK,MAAA,SAAS,EAAER,MAAM,CAACW,UAAvB;AAAA,gBACGL,IAAI,CAACM,KAAL,CAAW,EAAX,EAAeC,GAAf,CAAmB,CAACL,MAAD,EAASM,CAAT,kBAClB;AAAA,kBAAMP,WAAW,CAACC,MAAD,EAASM,CAAT;AAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACe,kBAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,cAAvB;AAAA,8BACE;AAAA,2BAASd,IAAI,KAAK,KAAT,GAAiB,MAAjB,GAA0B,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAEF,MAAM,CAACiB,MAAvB;AAAA,kBACGd,cAAc,CAACU,GAAf,CAAmB,CAACP,IAAD,EAAOQ,CAAP,kBAClB,QAAC,MAAD;AAAgB,UAAA,IAAI,EAAER,IAAtB;AAA4B,UAAA,QAAQ,EAAEF;AAAtC,WAAaU,CAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAnCuBb,K","sourcesContent":["import styles from \"./modal.module.scss\";\r\n\r\ninterface ModalProps {\r\n  type: \"won\" | \"lost\";\r\n  completedWords: string[];\r\n  solution: string;\r\n}\r\n\r\ninterface SquareProps {\r\n  word: string;\r\n  solution: string;\r\n}\r\n\r\nexport default function Modal({ type, completedWords, solution }: ModalProps) {\r\n  function Square({ word, solution }: SquareProps) {\r\n    function checkLetter(letter: string, pos: number): string {\r\n      if (solution.includes(letter)) {\r\n        if (solution[pos] === letter) {\r\n          return \"ðŸŸ©\";\r\n        } else {\r\n          return \"ðŸŸ¨\";\r\n        }\r\n      } else {\r\n        return \"â¬›\";\r\n      }\r\n    }\r\n    return (\r\n      <div className={styles.puzzleWord}>\r\n        {word.split(\"\").map((letter, i) => (\r\n          <div>{checkLetter(letter, i)}</div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.modalViewContainer}>\r\n      <div className={styles.modalContainer}>\r\n        <h2>You {type === \"won\" ? \"won!\" : \"lost\"}</h2>\r\n\r\n        <div className={styles.puzzle}>\r\n          {completedWords.map((word, i) => (\r\n            <Square key={i} word={word} solution={solution} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}